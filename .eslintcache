[{"F:\\to-do-app\\src\\index.js":"1","F:\\to-do-app\\src\\reportWebVitals.js":"2","F:\\to-do-app\\src\\App.js":"3","F:\\to-do-app\\src\\components\\TodoList.js":"4","F:\\to-do-app\\src\\components\\TodoForm.js":"5","F:\\to-do-app\\src\\components\\Todo.js":"6"},{"size":197,"mtime":1598205014000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":211,"mtime":1610911100650,"results":"10","hashOfConfig":"8"},{"size":1491,"mtime":1611090705797,"results":"11","hashOfConfig":"8"},{"size":1366,"mtime":1611090789555,"results":"12","hashOfConfig":"8"},{"size":1320,"mtime":1611082720448,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1t4b7ln",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},"F:\\to-do-app\\src\\index.js",[],["28","29"],"F:\\to-do-app\\src\\reportWebVitals.js",[],"F:\\to-do-app\\src\\App.js",[],"F:\\to-do-app\\src\\components\\TodoList.js",[],"F:\\to-do-app\\src\\components\\TodoForm.js",[],"F:\\to-do-app\\src\\components\\Todo.js",["30"],"import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport { MdDeleteForever } from 'react-icons/md';\nimport { TiEdit } from 'react-icons/ti';\nimport { FcApproval } from \"react-icons/fc\";\nimport { Checkmark } from 'react-checkmark';\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo, markAsDone }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: ''\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: ''\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => (\n    <div\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\n      key={index}\n    >\n      <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n        {todo.text}\n      </div>\n      <div className='icons'>\n        {todo.isEditable?<TiEdit\n          onClick={() => setEdit({ id: todo.id, value: todo.text })}\n          className='edit-icon'\n        />: undefined}\n        <MdDeleteForever\n          onClick={() => removeTodo(todo.id)}\n          className='delete-icon'\n        />\n        <FcApproval\n         onClick={() => markAsDone(index)}\n          className='mark-done'\n        />\n      </div>\n    </div>\n  ));\n};\n\nexport default Todo;\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":6,"column":10,"nodeType":"37","messageId":"38","endLine":6,"endColumn":19},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Checkmark' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]